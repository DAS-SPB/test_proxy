secrets:
  vault_token:
    file: ./secrets/vault_token.txt

services:
  vault:
    image: hashicorp/vault:latest
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://127.0.0.1:8200"
    command: >
      vault server
      -dev
      -dev-root-token-id=${VAULT_DEV_ROOT_TOKEN_ID}
      -dev-listen-address="0.0.0.0:8200"
    ports:
      - "8200:8200"
    volumes:
      - vault_data:/vault/file
    healthcheck:
      test: ["CMD", "vault", "status", "-format=json"]
      interval: 5s
      timeout: 2s
      retries: 5

  vault-init:
    image: hashicorp/vault:latest
    depends_on:
      vault:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./scripts/vault_init.sh
        target: /vault_init.sh
        read_only: true
    entrypoint: [ "/bin/sh", "/vault_init.sh" ]
    restart: "no"

  app1:
    build:
      context: .
      dockerfile: app1/Dockerfile
    ports:
      - "8001:8001"
    secrets:
      - vault_token
    depends_on:
      - vault
      - vault-init

  proxy:
    build:
      context: .
      dockerfile: proxy/Dockerfile
    ports:
      - "8003:8003"
    secrets:
      - vault_token
    depends_on:
      - vault
      - vault-init

  app2:
    build:
      context: .
      dockerfile: app2/Dockerfile
    ports:
      - "8002:8002"
    secrets:
      - vault_token
    depends_on:
      - vault
      - vault-init

  splunk:
    image: splunk/splunk:latest
    environment:
      SPLUNK_START_ARGS: "--accept-license"
      SPLUNK_PASSWORD: "${SPLUNK_PASSWORD}"
    ports:
      - "8000:8000"
      - "8088:8088"

volumes:
  vault_data:
